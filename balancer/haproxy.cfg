global
    log stdout format raw local0 info
    lua-load /usr/local/etc/haproxy/cors.lua

defaults
    mode http
    option httplog
    timeout client 7s
    timeout connect 7s
    timeout server 7s
    timeout http-request 7s
    log global
    errorfile 429 /usr/local/etc/haproxy/429.http
    errorfile 503 /usr/local/etc/haproxy/503.http

listen stats
	bind 0.0.0.0:8404
	stats enable
	stats uri /stats
	stats refresh 10s

frontend http_front
    http-request lua.cors "GET,POST,OPTIONS,PUT,DELETE,PATCH" "localhost:3000" "*"
    http-response lua.cors

    stick-table type ip size 500k expire 10s store http_req_rate(3s)
    http-request track-sc0 src
    http-request deny deny_status 429 if { sc_http_req_rate(0) gt 50 }

    bind *:4444 ssl crt /usr/local/etc/haproxy/haproxy-ssl.pem
    acl is_labworks_service path_beg /labworks-service/api/v1
    use_backend labworks_service if is_labworks_service
    acl is_bars_service path_beg /bars-service/api/v1/bars
    use_backend bars_service if is_bars_service
    default_backend default_handler

backend default_handler
    http-request return status 404 content-type "application/json" string "{\"messages\": [\"Resource not found\"]}" if TRUE

backend bars_service
    balance roundrobin
    option httpchk GET /bars-service/api/v1/bars/ping
    server bars-service-1 bars-service-1:9677 ssl verify none check inter 5s
    server bars-service-2 bars-service-2:9677 ssl verify none check inter 5s

backend labworks_service
    balance roundrobin
