/*
 * This file is generated by jOOQ.
 */
package ru.xgodness.model.generated.tables.records;


import javax.annotation.processing.Generated;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;

import ru.xgodness.model.generated.tables.Discipline;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DisciplineRecord extends UpdatableRecordImpl<DisciplineRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.discipline.name</code>.
     */
    public void setName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.discipline.name</code>.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.discipline.faculty</code>.
     */
    public void setFaculty(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.discipline.faculty</code>.
     */
    public String getFaculty() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.discipline.self_study_hours</code>.
     */
    public void setSelfStudyHours(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.discipline.self_study_hours</code>.
     */
    public Integer getSelfStudyHours() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DisciplineRecord
     */
    public DisciplineRecord() {
        super(Discipline.DISCIPLINE);
    }

    /**
     * Create a detached, initialised DisciplineRecord
     */
    public DisciplineRecord(String name, String faculty, Integer selfStudyHours) {
        super(Discipline.DISCIPLINE);

        setName(name);
        setFaculty(faculty);
        setSelfStudyHours(selfStudyHours);
        resetChangedOnNotNull();
    }
}
